CREATE TABLE USER_PROFILE
(
    USERNAME      VARCHAR2(20) NOT NULL,
    NAME          VARCHAR2(50) NOT NULL,
    EMAIL         VARCHAR2(50) NOT NULL,
    DATE_OF_BIRTH DATE NOT NULL,
    PASSWORD      VARCHAR2(1000) NOT NULL,
    CONTACT_NO    VARCHAR2(11) NOT NULL,
    GENDER        VARCHAR2(10) NOT NULL,
    PHOTO         VARCHAR2(1000) DEFAULT 'https://drive.google.com/uc?export=view&id=1ErbuELNkmNlaV3RpfZnpiBql6lAwPMou',
    TSHIRT_SIZE	  VARCHAR2(10) NOT NULL,
    HOUSE         VARCHAR2(100) NOT NULL,
    STREET        VARCHAR2(100) NOT NULL,
    CITY          VARCHAR2(100) NOT NULL,
	CONSTRAINT USER_PROFILE_USERNAME_PK PRIMARY KEY(USERNAME)
);

CREATE TABLE TEAM
(
    TEAM_NAME   VARCHAR2(30) NOT NULL,
    USERNAME    VARCHAR2(20) NOT NULL,
    EMAIL       VARCHAR2(50) NOT NULL,
    TEAM_RATING NUMBER(6,2) DEFAULT 0,
    POSITION    NUMBER(2,0),
	CONSTRAINT  TEAM_TEAM_NAME_PK PRIMARY KEY(TEAM_NAME),
	CONSTRAINT TEAM_USERNAME_FK FOREIGN KEY (USERNAME) REFERENCES USER_PROFILE (USERNAME) ON DELETE CASCADE
);

CREATE TABLE MEMBER
(
    USERNAME     VARCHAR2(20) NOT NULL,
    TEAM_NAME    VARCHAR2(30),
    STUDENT_ID   NUMBER(9,0) NOT NULL,
    LEVEL_       NUMBER(1,0),
    DEPT         VARCHAR2(10) NOT NULL,
    BATCH        VARCHAR2(10),
    REWARD_POINT NUMBER(6,0) DEFAULT 0,
    RATING       NUMBER(6,2) DEFAULT 0,
    RANK         NUMBER(3,0),
	CONSTRAINT MEMBER_USERNAME_FK1 FOREIGN KEY(USERNAME) REFERENCES USER_PROFILE(USERNAME) ON DELETE CASCADE,
  	CONSTRAINT MEMBER_TEAM_NAME_FK2 FOREIGN KEY(TEAM_NAME) REFERENCES TEAM(TEAM_NAME) ON DELETE CASCADE
);

CREATE TABLE ADMIN
(
    USERNAME   VARCHAR2(20) NOT NULL,
    INSTITUTE  VARCHAR2(100) NOT NULL,
  	CONSTRAINT ADMIN_USERNAME_FK FOREIGN KEY(USERNAME) REFERENCES USER_PROFILE(USERNAME) ON DELETE CASCADE
);

CREATE TABLE ALUMNI
(
    USERNAME        VARCHAR2(20) NOT NULL,
    STUDENT_ID      NUMBER(9,0) NOT NULL,
    DEPT            VARCHAR2(10) NOT NULL,
    BATCH           VARCHAR2(10),
    GRADUATION_YEAR DATE NOT NULL,
  	CONSTRAINT ALUMNI_USERNAME_FK FOREIGN KEY(USERNAME) REFERENCES USER_PROFILE(USERNAME) ON DELETE CASCADE
);

CREATE TABLE ONLINE_JUDGE
(
    JUDGE       VARCHAR2(20) NOT NULL,
    HANDLE      VARCHAR2(20) NOT NULL,
    USERNAME    VARCHAR2(20) NOT NULL,
    RATING      NUMBER(5,0) DEFAULT 0,
    SOLVE_COUNT NUMBER(5,0),
    CONSTRAINT  ONLINE_JUDGE_JUDGE_HANDLE_PK PRIMARY KEY(JUDGE,HANDLE),
    CONSTRAINT ONLINE_JUDGE_USERNAME_FK FOREIGN KEY(USERNAME) REFERENCES USER_PROFILE(USERNAME) ON DELETE CASCADE
);

CREATE TABLE BADGE
(
    BADGE_ID     VARCHAR2(20),
    BADGE_NAME   VARCHAR2(20) NOT NULL,
    CONTEST_NAME VARCHAR2(100) NOT NULL,
    CONSTRAINT  BADGE_BADGE_ID_PK PRIMARY KEY(BADGE_ID)
);

CREATE TABLE ACHIEVED_BY
(
    USERNAME            VARCHAR2(20) NOT NULL,
    BADGE_ID            VARCHAR2(20) NOT NULL,
    DATE_OF_ACHIEVEMENT DATE DEFAULT SYSDATE,
    CONSTRAINT ACHIEVED_BY_USERNAME_FK1 FOREIGN KEY(USERNAME) REFERENCES USER_PROFILE(USERNAME) ON DELETE CASCADE,
    CONSTRAINT ACHIEVED_BY_BADGE_ID_FK2 FOREIGN KEY(BADGE_ID) REFERENCES BADGE(BADGE_ID) ON DELETE CASCADE
);

CREATE TABLE REWARD
(
    REWARD_ID       VARCHAR2(20),
    USERNAME        VARCHAR2(20),
    ORDER_STATUS    VARCHAR2(10) NOT NULL,
    REWARD_NAME     VARCHAR2(50) NOT NULL,
    REQUIRED_POINTS NUMBER(6,0) NOT NULL,
    CONSTRAINT  REWARD_REWARD_ID_PK PRIMARY KEY(REWARD_ID),
    CONSTRAINT REWARD_USERNAME_FK FOREIGN KEY(USERNAME) REFERENCES USER_PROFILE(USERNAME) ON DELETE CASCADE
);

CREATE TABLE PROFESSION
(
    PROFESSION_ID VARCHAR2(20) NOT NULL,
    USERNAME      VARCHAR2(20) NOT NULL,
    ORGANIZATION  VARCHAR2(50) NOT NULL,
    DESIGNATION   VARCHAR2(50) NOT NULL,
    START_DATE    DATE NOT NULL,
    END_DATE      DATE,
    CONSTRAINT  PROFESSION_PROFESSION_ID_PK PRIMARY KEY(PROFESSION_ID),
    CONSTRAINT PROFESSION_USERNAME_FK FOREIGN KEY(USERNAME) REFERENCES USER_PROFILE(USERNAME) ON DELETE CASCADE
);

CREATE TABLE ADMIN_POSITION
(
    USERNAME   VARCHAR2(20) NOT NULL,
    POSITION   VARCHAR2(50) NOT NULL,
    CONSTRAINT ADMIN_POSITION_USERNAME_FK FOREIGN KEY(USERNAME) REFERENCES USER_PROFILE(USERNAME) ON DELETE CASCADE
);

CREATE TABLE ALUMNI_POSITION
(
    USERNAME   VARCHAR2(20) NOT NULL,
    POSITION   VARCHAR2(50) NOT NULL,
    CONSTRAINT ALUMNI_POSITION_USERNAME_FK FOREIGN KEY(USERNAME) REFERENCES USER_PROFILE(USERNAME) ON DELETE CASCADE
);

CREATE TABLE ALUMNI_PROJECT
(
    USERNAME   VARCHAR2(20) NOT NULL,
    PROJECTS   VARCHAR2(50) NOT NULL,
    CONSTRAINT ALUMNI_PROJECT_USERNAME_FK FOREIGN KEY(USERNAME) REFERENCES USER_PROFILE(USERNAME) ON DELETE CASCADE
);

CREATE TABLE HANDLES
(
    USERNAME   VARCHAR2(20) NOT NULL,
    JUDGE      VARCHAR2(20) NOT NULL,
    TEAM_NAME  VARCHAR2(30) NOT NULL,
    CONSTRAINT  HANDLES_USERNAME_JUDGE_PK PRIMARY KEY(USERNAME,JUDGE),
    CONSTRAINT HANDLES_TEAM_NAME_FK FOREIGN KEY(TEAM_NAME) REFERENCES TEAM(TEAM_NAME) ON DELETE CASCADE
);

CREATE TABLE COURSE
(
    COURSE_ID  VARCHAR2(20),
    OVERVIEW   VARCHAR2(1000) NOT NULL,
    PRICE      NUMBER(10,2) NOT NULL,
    START_TIME DATE NOT NULL,
    DURATION   NUMBER(3,0) NOT NULL,
    END_TIME   DATE,
    CONSTRAINT  COURSE_COURSE_ID_PK PRIMARY KEY(COURSE_ID)
);

CREATE TABLE ENROLL
(
    USERNAME            VARCHAR2(20) NOT NULL,
    COURSE_ID           VARCHAR2(20) NOT NULL,
    AMOUNT              NUMBER(10,2) NOT NULL,
    CONSTRAINT ENROLL_USERNAME_FK1 FOREIGN KEY(USERNAME) REFERENCES USER_PROFILE(USERNAME) ON DELETE CASCADE,
    CONSTRAINT ENROLL_COURSE_ID_FK2 FOREIGN KEY(COURSE_ID) REFERENCES COURSE(COURSE_ID) ON DELETE CASCADE
);

CREATE TABLE OFFER
(
    USERNAME            VARCHAR2(20) NOT NULL,
    COURSE_ID           VARCHAR2(20) NOT NULL,
    CONSTRAINT OFFER_USERNAME_FK1 FOREIGN KEY(USERNAME) REFERENCES USER_PROFILE(USERNAME) ON DELETE CASCADE,
    CONSTRAINT OFFER_COURSE_ID_FK2 FOREIGN KEY(COURSE_ID) REFERENCES COURSE(COURSE_ID) ON DELETE CASCADE
);

CREATE TABLE TEACHERS
(
    COURSE_ID   VARCHAR2(20) NOT NULL,
    TEACHER     VARCHAR2(50) NOT NULL,
    CONSTRAINT TEACHERS_COURSE_ID_FK FOREIGN KEY(COURSE_ID) REFERENCES COURSE(COURSE_ID) ON DELETE CASCADE
);

CREATE TABLE TASK
(
    TASK_ID        VARCHAR2(20) NOT NULL,
    USERNAME       VARCHAR2(20) NOT NULL,
    DATE_OF_ASSIGN DATE DEFAULT SYSDATE,
    DURATION       NUMBER(3,0) NOT NULL,
    DEADLINE       DATE,
    CONSTRAINT  TASK_TASK_ID_PK PRIMARY KEY(TASK_ID),
    CONSTRAINT TASK_USERNAME_FK FOREIGN KEY(USERNAME) REFERENCES USER_PROFILE(USERNAME) ON DELETE CASCADE
);

CREATE TABLE PERFORM
(
    USERNAME            VARCHAR2(20) NOT NULL,
    TASK_ID             VARCHAR2(20) NOT NULL,
    CONSTRAINT PERFORM_USERNAME_FK1 FOREIGN KEY(USERNAME) REFERENCES USER_PROFILE(USERNAME) ON DELETE CASCADE,
    CONSTRAINT PERFORM_TASK_ID_FK2 FOREIGN KEY(TASK_ID) REFERENCES TASK(TASK_ID) ON DELETE CASCADE
);

CREATE TABLE EXPENSE_REQUEST
(
    REQUEST_ID      VARCHAR2(20),
    DATE_OF_REQUEST DATE DEFAULT SYSDATE,
    AMOUNT          NUMBER(10,2) NOT NULL,
    SECTOR          VARCHAR2(50) NOT NULL,
    CONSTRAINT  EXPENSE_REQUEST_REQUEST_ID_PK PRIMARY KEY(REQUEST_ID)
);

CREATE TABLE STATUS
(
    USERNAME            VARCHAR2(20) NOT NULL,
    REQUEST_ID          VARCHAR2(20) NOT NULL,
    CONSTRAINT STATUS_USERNAME_FK1 FOREIGN KEY(USERNAME) REFERENCES USER_PROFILE(USERNAME) ON DELETE CASCADE,
    CONSTRAINT STATUS_REQUEST_ID_FK2 FOREIGN KEY(REQUEST_ID) REFERENCES EXPENSE_REQUEST(REQUEST_ID) ON DELETE CASCADE
);

CREATE TABLE EVENT
(
    EVENT_ID   VARCHAR2(20),
    USERNAME   VARCHAR2(20) NOT NULL,
    EVENT_NAME VARCHAR2(100) NOT NULL,
    OVERVIEW   VARCHAR2(1000) NOT NULL,
    START_TIME DATE NOT NULL,
    END_TIME   DATE NOT NULL,
    DURATION   NUMBER(3,0),
    CONSTRAINT  EVENT_EVENT_ID_PK PRIMARY KEY(EVENT_ID),
    CONSTRAINT EVENT_USERNAME_FK FOREIGN KEY(USERNAME) REFERENCES USER_PROFILE(USERNAME) ON DELETE CASCADE
);

CREATE TABLE VOLUNTEER
(
    USERNAME            VARCHAR2(20) NOT NULL,
    EVENT_ID            VARCHAR2(20) NOT NULL,
    CONSTRAINT VOLUNTEER_USERNAME_FK1 FOREIGN KEY(USERNAME) REFERENCES USER_PROFILE(USERNAME) ON DELETE CASCADE,
    CONSTRAINT VOLUNTEER_EVENT_ID_FK2 FOREIGN KEY(EVENT_ID) REFERENCES EVENT(EVENT_ID) ON DELETE CASCADE
);

CREATE TABLE SEGMENTS
(
    EVENT_ID   VARCHAR2(20) NOT NULL,
    SEGMENT    VARCHAR2(50) NOT NULL,
    CONSTRAINT SEGMENTS_EVENT_ID_FK FOREIGN KEY(EVENT_ID) REFERENCES EVENT(EVENT_ID) ON DELETE CASCADE
);

CREATE TABLE SPONSORSHIPS
(
    EVENT_ID   VARCHAR2(20) NOT NULL,
    SPONSOR    VARCHAR2(50) NOT NULL,
    CONSTRAINT SPONSORSHIPS_EVENT_ID_FK FOREIGN KEY(EVENT_ID) REFERENCES EVENT(EVENT_ID) ON DELETE CASCADE
);

CREATE TABLE PARTICIPANT
(
    PART_ID  VARCHAR2(20),
    NAME          VARCHAR2(50) NOT NULL,
    EMAIL         VARCHAR2(50) NOT NULL,
    INSTITUTE     VARCHAR2(100) NOT NULL,
    GENDER        VARCHAR2(10) NOT NULL,
    TSHIRT_SIZE	  VARCHAR2(10) NOT NULL,
    CONTACT_NO    VARCHAR2(11) NOT NULL,
	CONSTRAINT PARTICIPANT_PART_ID_PK PRIMARY KEY(PART_ID)
);

CREATE TABLE PARTICIPATION
(
    EVENT_ID            VARCHAR2(20) NOT NULL,
    PART_ID             VARCHAR2(20) NOT NULL,
    SEGMENT             VARCHAR2(50) NOT NULL,
    POSITION            NUMBER(5,0) NOT NULL,
    CONSTRAINT PARTICIPATION_EVENT_ID_FK1 FOREIGN KEY(EVENT_ID) REFERENCES EVENT(EVENT_ID) ON DELETE CASCADE,
    CONSTRAINT PARTICIPATION_PART_ID_FK2 FOREIGN KEY(PART_ID) REFERENCES PARTICIPANT(PART_ID) ON DELETE CASCADE
);

CREATE TABLE FUND
(
    FUND_ID         VARCHAR2(20),
    DATE_OF_FUNDING DATE DEFAULT SYSDATE,
    AMOUNT          NUMBER(10,2) NOT NULL,
    SOURCE          VARCHAR2(50) NOT NULL,
    CONSTRAINT  FUND_FUND_ID_PK PRIMARY KEY(FUND_ID)
);

CREATE TABLE EXPENSE
(
    EXPENSE_ID      VARCHAR2(20),
    DATE_OF_APPROVE DATE DEFAULT SYSDATE,
    AMOUNT          NUMBER(10,2) NOT NULL,
    SECTOR          VARCHAR2(50) NOT NULL,
    CONSTRAINT  EXPENSE_EXPENSE_ID_PK PRIMARY KEY(EXPENSE_ID)
);